apply plugin: 'com.android.application'
apply plugin: 'com.novoda.build-properties'

buildProperties {
    getPublic {
        file rootProject.file('public.properties')
    }
    getLocal {
        file rootProject.file('local.properties')
    }
}

android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION
    defaultConfig {
        applicationId "com.thirtydegreesray.openhub"
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode VERSION_CODE as int
        versionName VERSION_NAME
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled false

        buildConfigField "String", "OPENHUB_CLIENT_ID", (buildProperties.getLocal['openhub_client_id'] | buildProperties.getPublic['openhub_client_id']).string
        buildConfigField "String", "OPENHUB_CLIENT_SECRET", (buildProperties.getLocal['openhub_client_secret'] | buildProperties.getPublic['openhub_client_secret']).string
        buildConfigField "String", "BUGLY_ID", (buildProperties.getLocal['bugly_appid'] | buildProperties.getPublic['bugly_appid']).string
        buildConfigField "String", "DEBUG_BUGLY_ID", (buildProperties.getLocal['debug_bugly_appid'] | buildProperties.getPublic['debug_bugly_appid']).string

        ndk {
            abiFilters 'armeabi', 'armeabi-v7a', 'x86'
//            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
    }

    signingConfigs  {
        release {
            storeFile(file((buildProperties.getLocal['sign_path'] | buildProperties.getPublic['sign_path']).string))
            storePassword((buildProperties.getLocal['store_password'] | buildProperties.getPublic['store_password']).string)
            keyAlias((buildProperties.getLocal['key_alias'] | buildProperties.getPublic['key_alias']).string)
            keyPassword((buildProperties.getLocal['key_password'] | buildProperties.getPublic['key_password']).string)
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds true
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    flavorDimensions "default"

    productFlavors {
        normal {
            dimension "default"
            // add app_name int string.xml
            resValue "string", "app_name", "OpenHub"
        }
        fullName {
            dimension "default"
            // add app_name int string.xml
            resValue "string", "app_name", "OpenHub for GitHub"
        }
    }

    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [BUGLY_APP_CHANNEL_VALUE: name]
    }

}

repositories {
    maven { url "https://jitpack.io" }
    google()
    flatDir {
        dirs 'libs' //aar
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'

//    compile "com.android.support:support-annotations:${ANDROID_SUPPORT_VERSION}"

    compile "com.android.support:support-v4:${ANDROID_SUPPORT_VERSION}"
//    compile "com.android.support:support-v13:${ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:appcompat-v7:${ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:recyclerview-v7:${ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:design:${ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:cardview-v7:${ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:support-vector-drawable:${ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:preference-v7:${ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:preference-v14:${ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:customtabs:${ANDROID_SUPPORT_VERSION}"

    compile "com.android.support.constraint:constraint-layout:${CONSTRAINT_VERSION}"
//    compile "com.android.support:multidex:${MULTIDEX_VERSION}"

    compile "com.thirtydegreesray:dataautoaccess:${DATAAUTOACCESS_VERSION}"
    annotationProcessor "com.thirtydegreesray:dataautoaccess-compiler:${DATAAUTOACCESS_VERSION}"

    compile "com.jakewharton:butterknife:${BUTTERKNIFE_VERSION}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${BUTTERKNIFE_VERSION}"

    //数据库工具
    compile "org.greenrobot:greendao:${GREEN_DAO_VERSION}"
    //事件总线
    compile "org.greenrobot:eventbus:${EVENT_BUS_VERSION}"
    //文件下载

    //RxJava
    compile "io.reactivex:rxjava:${RXJAVA_VERSION}"
    compile "io.reactivex:rxandroid:${RXJAVA_VERSION}"

    //Type-safe HTTP client for Android and Java by Square, Inc.
    compile "com.squareup.retrofit2:retrofit:${RETROFIT_VERSION}"
    compile "com.squareup.retrofit2:converter-gson:${RETROFIT_VERSION}"
    compile "com.squareup.retrofit2:adapter-rxjava:${RETROFIT_VERSION}"
    compile ("com.squareup.retrofit2:converter-simplexml:${RETROFIT_VERSION}"){
        exclude group: 'xpp3', module: 'xpp3'
        exclude group: 'stax', module: 'stax-api'
        exclude group: 'stax', module: 'stax'
    }

    //dagger依赖注入
    compile "com.google.dagger:dagger:${DAGGER_VERSION}"
    annotationProcessor "com.google.dagger:dagger-compiler:${DAGGER_VERSION}"

    compile "com.tbruyelle.rxpermissions:rxpermissions:${RX_PERMISSION_VERSION}"

    compile "com.github.bumptech.glide:glide:${GLIDE_VERSION}"
    annotationProcessor "com.github.bumptech.glide:compiler:${GLIDE_VERSION}"

//    compile "com.makeramen:roundedimageview:${ROUNDED_IMAGEVIEW_VERSION}"
    compile "de.hdodenhof:circleimageview:${CIRCLE_IMAGEVIEW_VERSION}"

    compile "com.github.GrenderG:Toasty:${TOASTY_VERSION}"
    compile "com.github.daniel-stoneuk:material-about-library:${MATERIAL_ABOUT_VERSION}"
    compile "com.unstoppable:submitbutton:${SUBMIT_BUTTON_VERSION}"

    compile "com.afollestad.material-dialogs:core:${MATERIAL_DIALOG_VERSION}"
    compile "com.afollestad.material-dialogs:commons:${MATERIAL_DIALOG_VERSION}"

    compile "com.tencent.bugly:crashreport_upgrade:1.3.4"
    compile "com.tencent.bugly:nativecrashreport:${BUGGLY_NATIVE_VERSION}"
    compile "com.zzhoujay.richtext:richtext:${RICKTEXT_VERSION}"
    compile 'com.zzhoujay.glideimagegetter:glideimagegetter:1.0.5'

    compile "com.orhanobut:logger:${LOGGER_VERSION}"
    compile "com.timehop.stickyheadersrecyclerview:library:${STICKY_HEAD_VERSION}"

    compile "org.jsoup:jsoup:${JSOUP_VERSION}"
}
